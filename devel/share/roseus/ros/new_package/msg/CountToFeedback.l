;; Auto-generated. Do not edit!


(when (boundp 'new_package::CountToFeedback)
  (if (not (find-package "NEW_PACKAGE"))
    (make-package "NEW_PACKAGE"))
  (shadow 'CountToFeedback (find-package "NEW_PACKAGE")))
(unless (find-package "NEW_PACKAGE::COUNTTOFEEDBACK")
  (make-package "NEW_PACKAGE::COUNTTOFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude CountToFeedback.msg.html


(defclass new_package::CountToFeedback
  :super ros::object
  :slots (_countedTill ))

(defmethod new_package::CountToFeedback
  (:init
   (&key
    ((:countedTill __countedTill) 0)
    )
   (send-super :init)
   (setq _countedTill (round __countedTill))
   self)
  (:countedTill
   (&optional __countedTill)
   (if __countedTill (setq _countedTill __countedTill)) _countedTill)
  (:serialization-length
   ()
   (+
    ;; int32 _countedTill
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; int32 _countedTill
       (write-long _countedTill s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; int32 _countedTill
     (setq _countedTill (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get new_package::CountToFeedback :md5sum-) "9f05abd1e84f20980015a03ca9270a3e")
(setf (get new_package::CountToFeedback :datatype-) "new_package/CountToFeedback")
(setf (get new_package::CountToFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
int32 countedTill


")



(provide :new_package/CountToFeedback "9f05abd1e84f20980015a03ca9270a3e")


