;; Auto-generated. Do not edit!


(when (boundp 'new_package::CountToGoal)
  (if (not (find-package "NEW_PACKAGE"))
    (make-package "NEW_PACKAGE"))
  (shadow 'CountToGoal (find-package "NEW_PACKAGE")))
(unless (find-package "NEW_PACKAGE::COUNTTOGOAL")
  (make-package "NEW_PACKAGE::COUNTTOGOAL"))

(in-package "ROS")
;;//! \htmlinclude CountToGoal.msg.html


(defclass new_package::CountToGoal
  :super ros::object
  :slots (_uptoNumber ))

(defmethod new_package::CountToGoal
  (:init
   (&key
    ((:uptoNumber __uptoNumber) 0)
    )
   (send-super :init)
   (setq _uptoNumber (round __uptoNumber))
   self)
  (:uptoNumber
   (&optional __uptoNumber)
   (if __uptoNumber (setq _uptoNumber __uptoNumber)) _uptoNumber)
  (:serialization-length
   ()
   (+
    ;; int32 _uptoNumber
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; int32 _uptoNumber
       (write-long _uptoNumber s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; int32 _uptoNumber
     (setq _uptoNumber (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get new_package::CountToGoal :md5sum-) "6f404ade2cd7e69b63a909a70e666269")
(setf (get new_package::CountToGoal :datatype-) "new_package/CountToGoal")
(setf (get new_package::CountToGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
int32 uptoNumber

")



(provide :new_package/CountToGoal "6f404ade2cd7e69b63a909a70e666269")


